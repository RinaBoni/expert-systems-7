<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title></title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body TEXT="#000000" BGCOLOR="#E7E3E7" LINK="#004080" VLINK="#004080" olink="#008080" Background="">
<table BORDER=0   COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index1.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index3.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
<p>&nbsp;</p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><b><font size="4">15.1. 
  Стратегии конструирования</font></b><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Предположим, 
  у вас возникла необходимость расставить мебель в комнате. Цель решения этой 
  задачи можно сформулировать следующим образом: найти такой вариант расстановки, 
  который, во-первых, удовлетворял бы заданным геометрическим ограничениям (комната 
  имеет конечные размеры, в ней, возможно, имеются какие-то специфические особенности, 
  например альков, предметы обстановки также имеют свои размеры и т.п.), а во-вторых, 
  учитывал бы определенные предпочтения, касающиеся взаимного расположения предметов 
  обстановки (рабочий стол возле окна, диван против телевизора и т.д.). Скорее 
  всего вы начнете с того, что выберете место для одного-двух главных предметов, 
  которые зададут &quot;точки привязки&quot; для остальных. Далее выполняется 
  расстановка остальных предметов и проверяется, насколько полученный вариант 
  удовлетворяет сформулированным требованиям.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Если вам очень 
  повезет, то первый же вариант может оказаться удачным, но рассчитывать на это 
  вряд ли стоит. Скорее всего окажется, что на каком-то этапе расстановки нарушаются 
  сформулированные ограничения. Когда такое случится, совсем не обязательно отменять 
  все ранее сделанное и возвращаться в самое начало процесса. Как правило, вы 
  найдете способ, как, сдвинув пару-другую предметов, &quot;втиснуться&quot; в 
  ограничения. Лучшим из способов такой &quot;подстройки&quot; является тот, который 
  сохранит самую большую часть ранее проделанной работы.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Как уже не 
  раз подчеркивалось, основная сложность решения задач конструирования состоит 
  именно в том, что чаще всего нельзя заранее сказать, подойдет ли данная частично 
  выполненная конструкция для окончательного варианта, т.е. можно ли будет, развивая 
  дальше это частичное решение, получить окончательный вариант, удовлетворяющий 
  всем ограничениям. В применении к задачам конструирования восходящая стратегия 
  (стратегия <i>снизу вверх), </i>которую мы использовали для решения задач малой 
  размерности, выглядит примерно так.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">(1) Если это 
  возможно, начать с частичного варианта расстановки, который удовлетворяет заданным 
  ограничениям. В противном случае начать с размещения первого компонента.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">(2) Если расставлены 
  все компоненты, прекратить процесс. В противном случае выполнить &quot;наиболее 
  многообещающее&quot; расширение текущего варианта — поместить в планировку новый 
  компонент.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">(3) Если новый 
  вариант размещения &quot;не вписывается&quot; в ограничения, предложить такой 
  способ корректировки этого варианта, который требует как можно меньших переделок 
  выполненных этапов.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">(4) Перейти 
  на шаг 2.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Конечно, эта 
  стратегия выглядит слишком уж обобщенной, но даже на этом уровне в ней можно 
  отметить несколько интересных моментов. Во-первых, она рекомендует при малейшей 
  на то возможности начинать с какого-нибудь удовлетворительного варианта, а не 
  с чистого листа. Так, если речь идет о планировании операций, начинайте с какого-нибудь 
  частичного варианта, развитие которого в предыдущих аналогичных задачах привело 
  к успеху. Не так уж фантастично выглядит идея, что в голове у человека-проектировщика 
  имеется что-то вроде библиотеки заготовок для тех классов задач, с которыми 
  ему приходилось иметь дело. Во-вторых, &quot;наиболее многообещающее&quot; расширение 
  текущего варианта— это то, которое оставляет вам как можно большую свободу действий 
  в будущем. Например, при выполнении планирования очередное действие должно по 
  возможности сохранять временной зазор для последующих этапов, еще не включенных 
  в план. Такую стратегию принято называть стратегией <i>наименьшего принуждения 
  (least commitment). </i>В-третьих, корректировка текущего варианта совсем не 
  обязательно должна сводиться к отмене последней по времени операции. Например, 
  установка рабочего стола может привести к тому, что он &quot;закроет&quot; телевизор. 
  Но совсем не обязательно отменять последнее действие и удалять с плана стол, 
  может быть, целесообразнее сдвинуть телевизор или диван.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">При решении 
  задачи расстановки множества предметов может оказаться, что пространство поиска 
  будет очень большим и таким образом проблема может перейти в разряд нерешаемых. 
  Но, как правило, такие задачи можно упростить, рассматривая их на разном уровне 
  представления деталей. Рассмотрим, например, задачу планировки дома на заданном 
  участке земли. Пусть сейчас нас интересует компоновка помещений. Эту задачу 
  можно сформулировать на разных уровнях абстракции (см. <i>[Rosenman et al, 1987]):</i><br>
  </font></p>
<ul>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> в терминах <i>взаимного 
    положения, </i>например &quot;комната А рядом с комнатой Б&quot;;<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> в терминах <i>ориентации, 
    </i>например &quot;комната А на север от комнаты Б&quot;;<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> в терминах <i>координат, 
    </i>которые <i>точно </i>указывают положение комнаты А по отношению к комнате 
    Б.<br>
    </font></li>
</ul>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">На самом верхнем 
  уровне абстракции принимается решение, какое помещение с каким должны соседствовать 
  (например, кухня и столовая, ванная и спальня). Это решение уже сокращает возможность 
  экспоненциального расширения пространства поиска. На следующем уровне принимается 
  решение, например, что жилая комната должна выходить на юг, а кухня — на север, 
  чтобы в ней было прохладнее. Это решение накладывает одновременно ограничения 
  и на расположение столовой. После того как будет покончено с взаимным положением 
  помещений и их ориентацией, нам потребуются какие-то эвристики, помогающие выделить 
  место на планировке для всех помещений и разрешать возникающие при этом конфликты. 
  Например, одна из эвристик предлагает сначала выбрать место для самых главных 
  помещений, а оставшееся распределить между подсобными.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Такой иерархический 
  подход хорошо знаком тем, кто часто имеет дело с проектированием планировок. 
  Что касается экспертных систем, предназначенных для такого рода задач, то в 
  таких системах, как NOAH <i>[Sacerdoti, 1974] </i>и NONLIN <i>[Tate, 1977], 
  </i>которые явились развитием программы STRIPS, упрощение пространства поиска 
  было достигнуто за счет следующего:<br>
  </font></p>
<ul>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> действия на более высоких 
    уровнях абстракции рассматриваются как группы, объединяющие целую последовательность 
    действий более низких уровней;<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> проблема планирования 
    решается в терминах частичного упорядочения таких групп;<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> уточнение деталей выполняется 
    на все более низких уровнях абстракции до тех пор, пока план не будет полностью 
    завершен.<br>
    </font></li>
</ul>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Описанный 
  подход к решению проблемы можно отнести к типу нисходящих. В чем-то он напоминает 
  организацию задача-подзадача, принятую в системе R1. Но существенное отличие 
  от системы R1 состоит в том, что в данном случае иногда приходится пересматривать 
  уже принятые решения в пределах одного и того же уровня абстракции, чего в программе 
  R1 никогда не делается. Это и есть реализация той части стратегии, которая обозначена 
  словом <i>пересмотр </i>в общем названии <i>предложение и пересмотр (propose 
  and revise). </i>При решении очень сложных задач планирования иногда приходится 
  выполнять пересмотр решений, принятых и на более верхних уровнях абстракции, 
  а затем возвращаться на текущий уровень. Конечно, желательно по возможности 
  избегать такого переноса, а потому серьезное внимание должно быть уделено выработке 
  наиболее перспективных предложений и реализации стратегии наименьшего принуждения.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">В следующем 
  разделе мы рассмотрим систему MOLGEN <i>[Stefik, 1981, a], [Stefik, 1981, b], 
  </i>которая предназначена для планирования экспериментов в исследованиях по 
  молекулярной генетике. По ходу описания системы мы еще раз обратим ваше внимание 
  на те моменты, о которых шла речь в этом разделе. Эта система является хорошим 
  примером применения многоуровневого подхода на основе стратегии наименьшего 
  принуждения для решения проблем конструирования. В разделе 15.3 будет рассмотрен 
  метод восходящего решения проблем в системе VT <i>[Marcus et al, 1988]. </i>Эта 
  система предказначена для проектирования лифтовых систем и использует стратегию 
  <i>предложение и пересмотр. </i>В этом же разделе вы познакомитесь с методикой 
  приобретения знаний, основанной на использовании инструментальной системы SALT 
  <i>[Marcus, 1988, b].</i></font></p>
<p>&nbsp;</p><table BORDER=0   COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index1.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index3.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
</body>
</html>