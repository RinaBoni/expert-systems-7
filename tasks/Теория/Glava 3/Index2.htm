<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title></title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body TEXT="#000000" BGCOLOR="#E7E3E7" LINK="#004080" VLINK="#004080" olink="#008080" Background="">
<table BORDER=0   COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index1.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index3.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
<p>&nbsp;</p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><b><font size="4">3.1. 
  Представление знаний: принципы и методы</font></b><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">В области 
  экспертных систем представление знаний означает не что иное, как систематизированную 
  методику описания на машинном уровне того, что знает человек-эксперт, специализирующийся 
  в конкретной предметной области. Но ошибочно считать, будто представление знаний 
  сводится к кодированию в смысле, аналогичном шифрованию. Если закодировать сообщение, 
  подставив некоторым регулярным образом вместо одних символов другие, то полученный 
  результат не имеет ничего общего с <i>представлением </i>содержания сообщения 
  в том смысле, как это понимается в теории искусственного интеллекта, даже если 
  полученный код легко воспринимается на машинном уровне и его можно хранить в 
  памяти компьютера.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Обратим внимание 
  хотя бы на то, что в таком коде сохраняется та лексическая или структурная неоднозначность, 
  которая присуща естественному человеческому языку. Так, сообщение<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">&quot;Посещение 
  тетушки может быть надоедливым&quot;<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">будет настолько 
  же неоднозначным в кодированном виде, что и на &quot;человеческом&quot; языке. 
  Перевод этого текста в машинный код не избавит нас от того, что это сообщение 
  можно трактовать и как утверждение, что &quot;надоедает наносить визиты тетушке&quot;, 
  и как утверждение, что &quot;надоедает, когда тетушка наносит визит&quot;.<br>
  </font></p>
<p align="center"> <font face="Arial, Helvetica, sans-serif" size="3"><b><font color="#666666">3.1. 
  Молотки, графины и теоремы</font></b><font color="#666666"><br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3" color="#666666">Один 
  из парадоксов искусственного интеллекта состоит в том, что многие задачи поиска 
  смыслового содержания, которые легко решаются человеком, очень трудно реализовать 
  на машине и наоборот. Рассмотрим следующую фразу:<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">&quot;Молоток 
  ударил графин, и он разбился&quot;.<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">К 
  чему относится &quot;он&quot; в этой фразе? Для нас ответ очевиден, и мы даже 
  не замечаем неоднозначности в этой фразе. Но как в общем смысле машина будет 
  интерпретировать эту фразу? Предположение, что &quot;он&quot; относится к последнему 
  по порядку следования в предложении существительному, не всегда срабатывает. 
  Например:<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">Графин 
  ударился о камень, и он разбился.&quot;<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">Для 
  нас совершенно очевидно, что пострадавшим в обоих случаях должен быть графин. 
  Мы обладаем тем, что называется &quot;предварительным знанием&quot;, но непотнятно, 
  как оно должно быть представлено в машине. Также далеко не очевидно, как собрать 
  такого рода знания и как организовать их извлечение в конкретной ситуации. Единственное, 
  что в этом смысле можно предложить — сформировать огромную таблицу, состоящую 
  из всевозможных пар объектов во вселенной, и указать в ней, какой из двух предметов 
  более хрупкий?<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">Теперь 
  рассмотрим задачу из совершенно другой области. Нужно решить, является ли некоторая 
  логическая формула теоремой исчисления высказываний (см. главу 8). Например, 
  является ли теоремой формула<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">(р 
  &amp; (q=&gt;r)) э ((s v p) &amp; (~r=&gt;-q)).<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">Оказывается, 
  что не является, поскольку существует вариант, когда истинное значение присваивается 
  последовательно переменным р, q, r, s, и все выражение становится ложным. Написать 
  программу, которая поможет компьютеру прийти к такому заключению, — задача довольно 
  тривиальная, а сделать то же самое обычному человеку довольно сложно.<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">Грубо 
  говоря, разница между этими двумя задачами состоит в том, что знание, необходимое 
  для решения задач из области исчисления высказываний, можно выразить в компактной 
  форме в виде правил, а знания, которые требуются для правильной интерпретации 
  любой фразы в форме<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">&quot;X 
  ударил Y, и он разбился&quot;,<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">кажутся 
  на первый взгляд бесконечными по объему и предполагают множество исключений 
  вроде того, что существует и пластиковый молоток, и выточенная из камня ваза, 
  бумажная стена и т.д. и т.п. Кажется, что для решения подобных проблем программа 
  должна обладать чем-то вроде &quot;здравого смысла&quot;, в то время как для 
  решения формальных логических задач никакого здравого смысла не нужно.<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">Любое 
  общение человека с миром техники предполагает наличие некоторого предварительного 
  знания. Если, например, некто берется за поиск неисправности в цифровой схеме, 
  то это предполагает, что он обладает определенными базовыми знаниями из области 
  электротехники. Нет необходимости подчеркивать, что компьютер (в чистом виде) 
  никакими предварительными знаниями не обладает, а потому техническая эксперт-ность 
  — набор качеств, лежащих в основе высокого уровня работы людей-специалистов 
  при решении проблем в определенной узкой области, — должна включать и эти предварительные 
  знания.<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">И 
  наконец, представление предполагает определенную организованность знаний. Представление 
  знаний должно позволить извлекать их в нужной ситуации с помощью относительно 
  несложного и более-менее естественного механизма. Простого перевода информации 
  (знаний) в форму, пригодную для хранения на машинных носителях, здесь явно недостаточно. 
  Для того чтобы можно было достаточно быстро извлекать те элементы знаний, которые 
  наиболее пригодны в конкретной ситуации, база знаний должна обладать достаточно 
  развитыми средствами индексирования и контекстной адресации. Тогда программа, 
  использующая знания, сможет управлять последовательностью применения определенных 
  &quot;элементов&quot; знания, даже не обладая точной информацией о том, как 
  они хранятся.<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">Конечно, 
  программный код, выполняемый компьютером, должен соответствовать применяемой 
  системе обозначений, но это нельзя считать слишком уж серьезным ограничением. 
  Многие схемы представления, на первый взгляд чрезвычайно сильно отличающиеся, 
  оказываются на самом деле формально эквивалентными, т.е. все, что может быть 
  выражено в одной системе представления, может быть выражено и в другой.<br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" color="#666666"><font size="3">Прежде 
  чем перейти к рассмотрению конкретных примеров, давайте уточним терминологию, 
  взяв за основу цитаты из &quot;классических&quot; работ по искусственному интеллекту.</font><font size="3"></font></font><font face="Arial, Helvetica, sans-serif"><font size="3"><br>
  </font></font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3"><i>Представление 
  </i>(representation) в работе Уинстона <i>[Winston, 1984] </i>определяется как 
  &quot;множество синтаксических и семантических соглашений, которое делает возможным 
  описание предмета&quot;. В искусственном интеллекте под &quot;предметом&quot; 
  понимается состояние в некоторой проблемной области, например объекты в этой 
  области, их свойства, отношения, которые существуют между объектами. <i>Описание 
  </i>(description) &quot;позволяет использовать соглашения из представления для 
  описания определенных предметов&quot; <i>[Winston, 1992].</i><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3"><i>Синтаксис 
  </i>представления специфицирует набор правил, регламентирующих объединение символов 
  для формирования выражений на языке представления. Можно говорить о том, что 
  выражение <i>хорошо или плохо сформировано, </i>т.е. о том, насколько оно соответствует 
  этим правилам. Смысл должны иметь только хорошо сформированные выражения.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Общепринятым 
  в области искусственного интеллекта является синтаксис в виде конструкции <i>предикат-аргумент, 
  </i>которая имеет форму<br>
  </font></p>
<p align="left"> <font face="Verdana, Arial, Helvetica, sans-serif" size="3">&lt;фраза&gt; 
  ::= &lt;предикат&gt; (&lt;аргумент&gt;,..., &lt;аргумент&gt;)</font><font face="Arial, Helvetica, sans-serif" size="3"><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">В этой конструкции 
  за к-местным предикатом должны следовать <i>k </i>аргументов. Так, at может 
  быть двухместным отношением, в котором в качестве первого аргумента выступает 
  имя некоторого объекта, а в качестве второго— его местонахождение (например, 
  комната):<br>
  </font></p>
<p align="left"> <font face="Verdana, Arial, Helvetica, sans-serif" size="3">at(робот, 
  комнатаА)</font><font face="Arial, Helvetica, sans-serif" size="3"><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3"><i>Семантика 
  </i>представления специфицирует, как должно интерпретироваться выражение, построенное 
  в соответствии с синтаксическими правилами, т.е. как из его фор&quot;мы можно 
  извлечь какой-то смысл. Спецификация обычно выполняется присвоением смысла отдельным 
  символам, а затем индуцированием присвоения в более сложных выражениях. Так, 
  присваивая смысл символам at, робот, комнатаА, мы можем сказать, что выражение<br>
  </font></p>
<p align="left"> <font face="Verdana, Arial, Helvetica, sans-serif" size="3">at(робот, 
  комнатаА)</font><font face="Arial, Helvetica, sans-serif" size="3"><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">означает: 
  робот находится в комнате А (но не наоборот — комната А находится в роботе).<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Процесс решение 
  проблемы, как правило, включает в себя наряду с представлением предметов окружающего 
  мира и суждение о некоторых действиях. Как уже было показано в главе 2, некоторые 
  проблемы формулируются в терминах исходного и целевого состояний и множества 
  операций, которые можно использовать при попытках преобразовать начальное состояние 
  в целевое. Но здесь остается невыясненным вопрос о том, как можно представлять 
  операции.</font></p>
<p>&nbsp;</p><table BORDER=0   COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index1.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index3.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
</body>
</html>