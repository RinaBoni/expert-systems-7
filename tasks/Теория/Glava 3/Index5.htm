<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title></title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body TEXT="#000000" BGCOLOR="#E7E3E7" LINK="#004080" VLINK="#004080" olink="#008080" Background="">
<table BORDER=0   COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index4.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index6.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
<p>&nbsp;</p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><font size="4">3.2.2. 
  Анализ метода представления и управления в STRIPS</font><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Для того чтобы 
  яснее представить себе достоинства метода представления, использованного в системе 
  STRIPS, рассмотрим альтернативный метод. Предположим, что текущее состояние 
  окружающего мира представлено в виде двумерного массива с элементами разного 
  размера (в таком массиве элементы верхнего уровня — ячейки — представляют различные 
  помещения, а элементы второго уровня — объекты в этих помещениях). Такой вариант 
  представления компактнее описательного, но он не позволяет выполнять операции 
  сопоставления, описанные в предыдущем разделе. Можно, конечно, придумать какой-нибудь 
  способ описания целей и операций на языке, ориентированном на работу с массивами, 
  но тогда будут утеряны некоторые из главных достоинств рассмотренной методики.<br>
  </font></p>
<ul>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> В качестве операторов 
    придется использовать процедуры манипуляции с элементами массивов, которые 
    с большим трудом воспринимаются человеком, а значит, отлаживать и конструировать 
    операторы в такой форме значительно труднее, чем в форме таблиц операторов.<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> Программу будет значительно 
    сложнее модифицировать и совершенствовать. Предположим, что усложнится размещение 
    помещений и связи между ними. В таком случае придется полностью пересмотреть 
    и вручную скорректировать все процедуры работы с массивами помещений и объектов, 
    поскольку изменится размерность массива и связи между его элементами. А в 
    системе STRIPS единственное, что нужно будет сделать в этом случае, — изменить 
    модель мира, что делается значительно проще, поскольку при этом меняется не 
    программный код, а только описания.<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> Предположим теперь, 
    что в множество целей нужно включить, например, и такую: &quot;перенести <i>любые 
    </i>три ящика в комнату А&quot;, т.е. цель задает не единственное со</font><font face="Arial, Helvetica, sans-serif" size="3">стояние 
    мира, а множество состояний, удовлетворяющих сформулированному условию. При 
    такой постановке проблемы набор процедур, ориентированных на табличное представление, 
    придется пересмотреть коренным образом. Представление на базе конструкций 
    <i>предикат-аргумент </i>позволяет выразить целевое состояние, введя в выражение 
    переменные<br>
    </font></li>
</ul>
<p align="left"> <font face="Verdana, Arial, Helvetica, sans-serif" size="3">at(X, 
  комнатаА), at(Y, комнатаА), at(Z, комнатаА).</font><font face="Arial, Helvetica, sans-serif" size="3"><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">После этого 
  можно использовать прежнюю методику поиска решения.<br>
  </font></p>
<ul>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> Поиск решения проблемы 
    предполагает использование эвристик, поскольку, как правило, существует множество 
    вариантов, среди которых приходится выбирать.<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> При единообразном представлении 
    проще находить те операторы, которые можно применить в конкретной ситуации, 
    и просмотреть, какой эффект даст их применение. Единообразное представление 
    также значительно упрощает программную реализацию процесса поиска.<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> Часто удается достичь 
    заданной цели, применяя методику <i>понижения уровня сложности проблемы (problem 
    reduction). </i>При этом производится обратная трассировка проблемы — &quot;отталкиваясь&quot; 
    от цели, выясняем, какие предварительные условия требуется удовлетворить для 
    ее достижения, и формулируем на основе таких рассуждений более простые <i>подцели. 
    </i>Этот процесс рекурсивно продолжается до тех пор, пока не будут сформулированы 
    тривиальные подцели, достижимые с помощью простейших операций.<br>
    </font></li>
</ul>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Язык представления, 
  подобный тому, что используется в STRIPS, с точки зрения программной реализации 
  является <i>интерпретируемым </i>языком, т.е. трансляция с этого языка выполняется 
  интерпретатором, программой, которая способна распознавать в операторах языка 
  формулы, подобные рush(ящик1, комнатаБ, комнатаА), и выразить заложенный в формулах 
  смысл в терминах выполняемых процедур. Так, смысл приведенной выше формулы интерпретируется 
  как необходимость достичь предварительных условий<br>
  </font></p>
<p align="left"> <font face="Verdana, Arial, Helvetica, sans-serif" size="3">at(робот, 
  комнатаБ), at(ящик1, комнатаБ),</font><font face="Arial, Helvetica, sans-serif" size="3"><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">а затем реализовать 
  действия, предписанные списками добавлений и исключений, т.е. добавить в модель 
  мира состояние<br>
  </font></p>
<p align="left"> <font face="Verdana, Arial, Helvetica, sans-serif" size="3">at(po6oт, 
  комнатаА), at(ящик1, комнатаА) </font></p>
<p align="left"><font face="Arial, Helvetica, sans-serif" size="3">и исключить 
  из модели мира состояние<br>
  </font></p>
<p align="left"> <font face="Verdana, Arial, Helvetica, sans-serif" size="3">at(робот, 
  комнатаБ), at(ящик1, комнатаБ).</font><font face="Arial, Helvetica, sans-serif" size="3"><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Такой подход 
  к интерпретации получил наименование <i>проиедуральной семантики (procedural 
  semantics), </i>поскольку все, что известно программе о смысле формулы, — какие 
  действия ей нужно выполнить для того, чтобы формула получила значение <i>Истина. 
  </i>Как отмечалось в главе 2, это не очень широкое толкование смысла, и такой 
  подход вряд ля продвинет нас далеко в развитии машинного &quot;понимания&quot;. 
  Но, тем не менее, процедуральная семантика позволяет нам по крайней мере построить 
  связь между мыслью и действием.</font></p>
<p>&nbsp;</p><table BORDER=0   COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index4.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index6.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
</body>
</html>