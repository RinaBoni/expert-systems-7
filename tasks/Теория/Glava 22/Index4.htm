<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title></title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body TEXT="#000000" BGCOLOR="#E7E3E7" LINK="#004080" VLINK="#004080" olink="#008080" Background="">
<table BORDER=0   COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index3.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index5.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
<p>&nbsp;</p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><font size="4">22.1.2. 
  Методы извлечения и адаптации прецедентов</font><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">В системах 
  формирования суждений на основе прецедентов используются разные схемы извлечения 
  прецедентов и их адаптации к новым проблемам.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">В таких программах, 
  как CHEF, сопоставляются описания имеющихся прецедентов и полученная спецификация 
  цели, причем в качестве основного средства сопоставления выступает семантическая 
  сеть (см. главу 6). В примере, рассмотренном в предыдущем разделе, модулям извлечения 
  и модификации известно, что и брокколи, и зеленый горошек — это свежие овощи. 
  Модуль извлечения использует эту информацию для вычисления оценки степени близости 
  прецедента и целевой спецификации, а модуль модификации использует эту же информацию 
  для подстановки в рецепт одного ингредиента вместо другого. Это фоновое знание 
  играет весьма существенную роль в решении обеих задач.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Сложность 
  поиска решения и выявления различий между прецедентами в значительной степени 
  зависит от используемых термов индексации. По сути, прецеденты в базе прецедентов 
  конкурируют, пытаясь &quot;привлечь&quot; к себе внимание модуля извлечения, 
  точно так же, как порождающие правила конкурируют за доступ к интерпретатору. 
  В обоих случаях необходимо использовать какую-то стратегию разрешения конфликтов. 
  С этой точки зрения прецеденты должны обладать какими-то свойствами, которые, 
  с одной стороны, связывают прецедент с определенными классами проблем, а с другой 
  — позволяют отличить определенный прецедент от его &quot;конкурентов&quot;. 
  Например, в программе CHEF прецеденты индексируются по таким атрибутам, как 
  основной ингредиент блюда, гарнир, способ приготовления и т.п., которые специфицируются 
  в заказе.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Механизм сопоставления 
  должен быть достаточно эффективным, поскольку исчерпывающий поиск можно применять 
  только при работе с базами прецедентов сравнительно небольшого объема. Одним 
  из популярных методов эффективного индексирования является использование <i>разделяемой 
  сети свойств (shared feature network). </i>При этом прецеденты, у которых какие-либо 
  свойства совпадают, включаются в один кластер, в результате чего формируется 
  таксономия типов прецедентов. Сопоставление в такой разделяемой сети свойств 
  выполняется с помощью алгоритма поиска в ширину без обратного прослеживания. 
  Поэтому время поиска связано с объемом пространства логарифмической зависимостью. 
  Индивидуальное сопоставление, как правило, выполняется следующим образом.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Каждому свойству 
  (или <i>размерности) </i>присваивается определенный вес, соответствующий степени 
  &quot;важности&quot; этого свойства. Если, например, прецеденты включают счета 
  пользователей, то имя пользователя, скорее всего, не имеет значения при поиске 
  группы прецедентов с похожими счетами. Следовательно, свойство <i>имя </i>может 
  иметь вес 0. А вот остаток на счете (в долларах) имеет очень существенное значение 
  и ему следует придать вес 1.0. Чаще всего значения весов — это действительные 
  числа в интервале [0,1].<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Из всех этих 
  рассуждений вытекает простой алгоритм сопоставления прецедентов, представленный 
  ниже.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3" color="#666666"><b>Присвоить 
  MATCH = 0.0;</b><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3" color="#666666"><b>Для 
  каждого свойства в исходной спецификации </b></font></p>
<p align="left"><font face="Arial, Helvetica, sans-serif" size="3" color="#666666"><b>{</b><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3" color="#666666"><b>2.</b> 
  <b>Найти соответственное свойство в хранимых прецедентах.</b><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3" color="#666666"><b>3.</b> 
  <b>Сравнить два значения и вычислить степень близости <i>т.</i></b><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3" color="#666666"><b><i>4.</i></b><i> 
  </i><b>Умножить эту оценку на вес свойства с.</b><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3" color="#666666"><b>5.</b> 
  <b>Присвоить MATCH = MATCH + <i>cм.</i></b><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3" color="#666666"><b><i>}</i></b></font></p>
<p align="left"><font face="Arial, Helvetica, sans-serif" size="3" color="#666666"><b>Возвратить 
  MATCH.</b></font><font face="Arial, Helvetica, sans-serif" size="3"><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Базовая процедура 
  называется <i>сопоставлением с ближайшим соседом (Nearest-Neighbor matching), 
  </i>поскольку прецеденты, которые имеют близкие значения свойств, и концептуально 
  ближе друг другу. Это может найти отражение и в структуре сети, где степень 
  близости прецедентов будет соответствовать близости их свойств.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Вычисленное 
  по этому алгоритму значение MATCH обычно называется <i>агрегированной оценкой 
  совпадения (aggregate match score). </i>Естественно, что из базы прецедентов 
  выбирается тот, который &quot;заслужил&quot; самую высокую оценку. Если же алгоритм 
  работы системы предполагает и исследование альтернативных прецедентов, то оставшиеся 
  должны быть ранжированы по полученным оценкам. Большинство доступных на рынке 
  программ, имеющих дело с базами прецедентов, использует именно этот простой 
  алгоритм. Применяемый на шаге (2) метод вычисления степени близости зависит 
  от типа данных в каждом конкретном случае. При качественном сопоставлении свойств 
  достаточно будет использовать двоичные оценки или вычислять расстояние в абстрактной 
  иерархии. Так, в абстрактной иерархии ингредиентов кулинарных рецептов &quot;брокколи&quot; 
  ближе к &quot;горошку&quot;, чем к &quot;цыплятам&quot;, и вычисленное значение 
  должно отражать этот неоспоримый факт. Количественное сопоставление будет включать 
  и шкалирование.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Для адаптации 
  найденного прецедента к текущим целевым данным программы также используют разные 
  методы. В большинстве случаев можно обойтись заменой некоторых компонентов в 
  имеющемся решении или изменением порядка операций в плане. Но существуют и другие 
  подходы, которые перечислены ниже.<br>
  </font></p>
<ul>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> <i>Повторная конкретизация 
    </i>переменных в существующем прецеденте и присвоение им новых значений. Например, 
    сопоставление переменной овощи со значением брокколи вместо прежнего значения 
    горошек.<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> <i>Уточнение параметров. 
    </i>Некоторые прецеденты могут содержать числовые значения, например время 
    выполнения какого-либо этапа плана. Это значение должно быть уточнено в соответствии 
    с новым значением другого свойства. Например, если в рецепте требуется заменить 
    один ингредиент другим, то, вероятно, придется соответственно изменить и время 
    его обработки.<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> <i>Поиск в памяти. 
    </i>Иногда требуется найти способ преодоления затруднения, возникшего как 
    побочный эффект замены одних компонентов решения другими. Примером может послужить 
    уже упоминавшийся выше эффект нежелательного изменения свойств брокколи при 
    обжаривании вместе с кусочками баранины. Такой способ можно отыскать в той 
    же базе прецедентов или в специальной базе знаний.<br>
    </font></li>
</ul>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Большинство 
  из перечисленных методов жестко связано со способом представления иерархии абстракций, 
  который используется в конкретной программе. Это может быть система фреймов 
  или семантическая сеть, и в каждом из этих вариантов подстановка одних концептов 
  вместо других должна быть организована по-своему.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">В следующем 
  разделе мы рассмотрим систему, в которой используется довольно специфический 
  способ представления знаний для моделирования предметной области. Для организации 
  базы прецедентов в этой системе используется не разделяемая сеть свойств, а 
  факторы более высокого уровня абстракции, связанные со спецификой предметной 
  области. Такое представление требует применения более сложного механизма индексирования 
  прецедентов и их поиска, чем тот, который использовался в модуле извлечения 
  программы CHEF.</font></p>
<p>&nbsp;</p><table BORDER=0   COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index3.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index5.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
</body>
</html>