<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title></title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body TEXT="#000000" BGCOLOR="#E7E3E7" LINK="#004080" VLINK="#004080" olink="#008080" Background="">
<table BORDER =0  COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index9.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index11.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
<p>&nbsp;</p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><font size="4">18.3.2.</font> 
  <font size="4">Системы ВВ1 и ACCORD</font><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Перечисленные 
  выше особенности архитектуры среды ВВ можно проиллюстрировать на примере систем 
  ВВ 1 и ACCORD.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Как и в других 
  системах, использующих модель доски объявлений, в системе ВВ 1 источники знаний 
  активизируются событиями на связанном с этими источниками уровне доски объявлений, 
  в результате чего формируется запись активизации источника знаний <i>[Johnson 
  and Hayes-Roth, 1986]. </i>Собственно активизация источника знаний откладывается. 
  Запись активизации находится в списке заявок до тех пор, пока не будут выполнены 
  все предусловия, которые, как правило, связаны со свойствами объектов доски 
  объявлений. Но помимо доски объявлений и источников знаний предметной области, 
  система ВВ1 управляет также и источниками знаний управляющей доски объявлений. 
  Планировщик организует исполнение активизированных источников знаний обоих типов 
  — и предметной области и управления — в соответствии с планом, который динамически 
  корректируется компонентами управляющей доски объявлений. Результат активизации 
  источника знаний сказывается на состоянии уровня доски объявлений, подключенного 
  к его выходу, и таким образом активизируются другие источники знаний.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Основной цикл 
  работы ВВ1 состоит из следующих операций.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">(1) <i>Интерпретация 
  </i>действия, предусмотренного очередной записью активизации источника знаний.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">(2) <i>Обновление 
  </i>списка заявок — добавление в него новых записей, порожденных изменением 
  данных, вызванных предыдущей операцией, — и сортировка всех записей в списке 
  заявок в соответствии с текущим планом.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">(3) <i>Выбор 
  </i>записи с наибольшим рейтингом.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">ACCORD — это 
  язык для представления знаний, касающихся выполнения задач сборки многокомпонентных 
  объектов с соблюдением заданных ограничений. Метод сборки компонентов не предусматривает 
  какого-либо наперед заданного режима управления, но требует принятия множества 
  решений при конструировании отдельных узлов. Основной механизм представления 
  предполагает использование иерархии понятий — типов, представителей и экземпляров.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Типы определяют 
  родовые понятия и их роли, в отличие от того, как это делается в семантических 
  сетях с помощью связей типа IS-A (это есть). Представители — это конкретизированные 
  типы, а экземпляры — объекты, созданные при означивании представителей в определенном 
  контексте. Понятия могут иметь атрибуты и входить в определенные отношения с 
  другими понятиями. Здесь имеется определенная аналогия со связями типа IS-A 
  в семантических сетях.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Оболочка, 
  таким образом, предоставляет в распоряжение пользователя скелетные ветви иерархической 
  структуры объектов-компонентов, которые должны образовать единый ансамбль, контексты 
  их компоновки и ограничения, в которые эта компоновка должна &quot;вписываться&quot;. 
  Например, ACCORD представляет следующие роли, независимые от предметной области: 
  arrangement (сборка), partial-arrangement (узел) и included-object (компонент). 
  Между ролями имеется отношение типа includes (включает). Среди ролей included-object 
  важное место отводится роли anchor (якорь), представляющей объект, положение 
  которого в общем ансамбле (сборке) должно быть фиксированно, и таким образом 
  определяет локальный контекст для узла. Ролью anchoree представлен объект included-object, 
  который имеет, как минимум, одно ограничение, связанное с его положением относительно 
  объекта anchor.</font></p>
<p>&nbsp;</p><table BORDER =0  COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index9.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index11.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
</body>
</html>