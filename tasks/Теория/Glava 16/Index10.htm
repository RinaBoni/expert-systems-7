<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title></title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body TEXT="#000000" BGCOLOR="#E7E3E7" LINK="#004080" VLINK="#004080" olink="#008080" Background="">
<table BORDER =0  COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index9.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index11.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
<p>&nbsp;</p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><font size="4">16.2.2. 
  Проект <i>Explainable Expert Systems</i></font><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Свотаут обратил 
  внимание на проблему &quot;компьютерных артефактов&quot; в тех средствах формирования 
  пояснений, которые использовались в ранее разработанных экспертных системах. 
  Под такими артефактами он подразумевал те аспекты выполнения вычислений, которые 
  связаны не с лежащей в основе системы моделью предметной области, а с программной 
  реализацией алгоритмов самого нижнего уровня. Эти аспекты поведения программы 
  совершенно не интересуют специалистов, пользующихся услугами экспертной системы.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Система XPLAN 
  создавалась в рамках проекта <i>Explainable Expert Systems </i>(EES) <i>[Heches 
  et al, 1985], [Moore, 1995]. </i>Идея этого проекта вполне созвучна существующей 
  в настоящее время тенденции группировать и представлять в явном виде знания 
  различного вида. Кроме того, в рамках этого проекта предпринята попытка использовать 
  формальные методы, которые позволили бы зафиксировать в базе знаний системы 
  основные решения, принимаемые в процессе ее разработки. Отсутствие таких формальных 
  методов приводит к тому, что информация об основных решениях, положенных в основу 
  проектирования, теряется на стадии реализации системы.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">На рис. 16.3 
  представлена структурная схема оболочки, созданной в рамках проекта EES. Обратите 
  внимание на прямоугольник в левой части схемы, который представляет базу знаний 
  системы. В эту базу знаний входят не только модель и правила предметной области, 
  но и много дополнительной информации, например описание терминологии предметной 
  области, информация, связанная с правилами предметной области, о доводах в пользу 
  и против выбора определенной стратегии достижения цели, информация о том, каким 
  целям отдается предпочтение в процессе решения проблемы, и т.д. Знания, выделенные 
  в группу &quot;Интеграция&quot;, используются для разрешения конфликтов между 
  правилами предметной области в процессе работы &quot;автоматического программиста&quot;, 
  а знания, выделенные в группу &quot;Оптимизация&quot;, имеют отношение к производительности 
  экспертной системы, генерируемой этим автоматическим программистом. Эти служебные 
  группы знаний представляют те виды метазнаний, которые не связаны непосредственно 
  с выбором правил объектного уровня в процессе логического вывода на этапе функционирования 
  экспертной системы, а имеют отношение скорее к этапу ее проектирования.<br>
  </font></p>
<p align="center"><font face="Arial, Helvetica, sans-serif"><img src="3.gif" width="500" height="274"> 
  </font></p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3">Рис. 16.3. 
  Структура оболочки EES ([Neches et al., 1985])</font><font face="Arial, Helvetica, sans-serif" size="3"><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Семантика 
  базы знаний системы EES представлена в виде семантической сети, получившей наименование 
  NIKL <i>[Moser, 1983]. </i>Сеть появилась в результате развития идей, положенных 
  в основу создания сети KL-ONE <i>[Brachman and Schmolze, 1985]. </i>NIKL, так 
  же, как и KL-ONE, формирует множество концептов, имеющих собственную внутреннюю 
  структуру (набор слотов или ролей), между которыми можно задавать отношения 
  (формировать связи). NIKL также имеет в своем составе классификатор, который, 
  располагая информацией о структуре конкретной сети и новом концепте с определенной 
  структурой, может поместить этот новый концепт на соответствующее ему место 
  в общей таксономии концептов.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Пусть, например, 
  в сети имеются узлы концептов ЖИВОТНОЕ, СОБАКА и БЕШЕНОЕ-ЖИВОТНОЕ, а в классификатор 
  поступает новый концепт БЕШЕНАЯ-СОБАКА. В ответ классификатор формирует новый 
  узел для этого концепта и отводит ему место в иерархии. Новый узел будет связан 
  &quot;узами наследования&quot; с узлами СОБАКА и БЕШЕНОЕ-ЖИВОТНОЕ. Это выполняется 
  после анализа свойств и характеристик нового концепта (рис. 16.4). Трудно переоценить 
  способность системы наращивать таким образом базу знаний, которая, как правило, 
  никогда не создается за &quot;один присест&quot;.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Исчез (Neches) 
  описал применение оболочки EES для построения экспертной системы <b><i>Program 
  Enhancement </i></b><i>Advisor </i>(PEA). Эта программа предназначена для оказания 
  помощи программистам в повышении &quot;читабельности&quot; текстов программ. 
  В той предметной области, в которой должна работать новая экспертная система, 
  концептами семантической сети являются преобразования элементов программного 
  кода, например замена оператора COND языка LISP на конструкцию IF-THEN-ELSE. 
  Концепт является частным случаем другого концепта, KEYWORD CONSTRUCT, который, 
  в свою очередь, является частным случаем концепта Easy-TO-READ CONSTRUCT. Используя 
  организованную таким образом базу знаний, экспертная система может предложить 
  программисту-пользователю заменить оператор<br>
  </font></p>
<p align="left"> <font face="Verdana, Arial, Helvetica, sans-serif" size="3">(COND 
  ((АТОМ X) X) (Т (CAR X)))</font><font face="Arial, Helvetica, sans-serif" size="3"><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">другим оператором, 
  смысл которого более понятен при анализе текста программы: (IF (АТОМ X) THEN 
  X ELSE (CAR X)).<br>
  </font></p>
<p align="center"><font face="Arial, Helvetica, sans-serif"><img src="4.gif" width="550" height="348"> 
  </font></p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3">Рис. 16.4. 
  Включение нового концепта в семантическую сеть знаний<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Знания, которые 
  необходимы непосредственно для решения проблем, также представляются в семантической 
  сети NIKL. Они выражаются в терминах концептов планов и целей, которые организованы 
  в иерархическую структуру. Планы и цели связаны. Каждый план имеет &quot;описание 
  возможностей&quot;, в котором представлена информация о том, какие действия 
  можно реализовать с помощью этого плана. Терминологическая информация, хранящаяся 
  в семантической сети, используется генератором программ, например, для того, 
  чтобы собирать воедино отдельные экземпляры концептов.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Генератор 
  программ работает по принципу нисходящего (сверху вниз) уточнения, выполняя 
  декомпозицию целей на подцели. Так, главная цель программы PEA — <i>усовершенствовать 
  программу </i>— разделяется на подцели, например <i>улучшить читабельность. 
  </i>Разработчики системы назвали такой процесс декомпозиции целей &quot;динамическим 
  уточнением, направляемым пользователем&quot;, поскольку характер действий, выполняемых 
  создаваемой системой, определяется инженером по знаниям, формирующим базу знаний. 
  Если выбрана определенная цель, скажем <i>улучшить читабельность, </i>то она 
  автоматически становится субъектом процесса дальнейшей декомпозиции цель/подцель. 
  Например, следующими подцелями будет просмотр текста программы и выявление в 
  нем синтаксических конструкций, которые можно безболезненно заменить другими, 
  более понятными, получение подтверждения от пользователя, одобряющего предлагаемую 
  замену, выполнение замены и т.д. Фрагмент предыстории разработки системы PEA, 
  в котором отображена описанная декомпозиция, представлен на рис. 16.5.<br>
  </font></p>
<p align="center"><font face="Arial, Helvetica, sans-serif"><img src="5.gif" width="550" height="305"> 
  </font></p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3">Рис. 16.5. 
  Фрагмент предыстории разработки системы PEA, в котором отображена декомпозиция 
  цели на подцели ([Moore, 1995])</font><font face="Arial, Helvetica, sans-serif" size="3"><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Авторы оболочки 
  EES утверждают, что использованный ими подход имеет следующие достоинства.<br>
  </font></p>
<ul>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> Позволяет относительно 
    просто выразить сложные стратегии высокого уровня, которые в обычных экспертных 
    системах представлены неявно и &quot;упрятаны&quot; в алгоритм интерпретатора.<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> Разделение всех знаний 
    на отдельные группы упрощает разбиение системы на набор относительно независимых 
    модулей, а значит, облегчает последующую модификацию системы в процессе ее 
    эксплуатации.<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> Автоматическая классификация 
    новых знаний с помощью языков представления семантических сетей, подобных 
    NIKL, упрощает разработку и сопровождение системы, поскольку освобождает инженеров 
    по знаниям от забот о структурировании новых знаний.</font></li>
</ul>
<p>&nbsp;</p><table BORDER =0  COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index9.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index11.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
</body>
</html>