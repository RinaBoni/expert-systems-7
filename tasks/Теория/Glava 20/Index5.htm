<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title></title>
<meta http-equiv="Content-Type" content="text/html;charset=windows-1251">
</head>
<body TEXT="#000000" BGCOLOR="#E7E3E7" LINK="#004080" VLINK="#004080" olink="#008080" Background="">
<table BORDER=0   COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index4.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index6.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
<p>&nbsp;</p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3"><font size="4">20.2.2. 
  Пространство версий</font><br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">В этом разделе 
  мы рассмотрим одну из методик обучения, которая получила в литературе наименование 
  <i>пространство версий (version space) [Mitchell, 1978], [Mitchell, 1982], [Mitchell, 
  1997]. </i>Эта методика была реализована во второй версии системы Meta-DENDRAL. 
  При выводе общего правила масс-спектрометрии из набора примеров, демонстрирующих, 
  как определенные молекулы расщепляются на фрагменты, в этой версии Meta-DENDRAL 
  интенсивно используется механизм <i>обучения концептам, </i>о котором мы рассказывали 
  выше. В работе <i>[Mitchell, 1978] </i>так формулируется проблема обучения концептам.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">&quot;Концепт 
  можно представить как образец, который обладает свойствами, общими для всех 
  экземпляров этого концепта. Задача состоит в том, чтобы при заданном языке описания 
  образцов концептов и наличии обучающей выборки — наборе позитивных и негативных 
  экземпляров целевого концепта и способе сопоставления данных из обучающей выборки 
  и гипотез описания концепта — построить описание концепта, совместимого со всеми 
  экземплярами в обучающей выборке&quot;.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">В этом контексте 
  &quot;совместимость&quot; означает, что сформированное описание должно охватывать 
  все позитивные экземпляры и не охватывать ни один негативный экземпляр.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Для того чтобы 
  &quot;рассуждать&quot; о правилах, касающихся масс-спектрометрии, система Meta-DENDRAL 
  должна располагать языком представления концептов и отношений между ними в этой 
  предметной области. В Meta-DENDRAL это объектно-ориентированный язык (см. главу 
  6), который описывает сеть с помощью узлов и связей между ними. Узлы представляют 
  атомы в структуре молекулы, а связи — химические связи в молекуле. В этом языке 
  некоторый экземпляр в обучающей выборке соответствует образцу в том случае, 
  если сопоставимы все их узлы и связи и удовлетворяются все ограничения, специфицированные 
  в описании образца.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">В контексте 
  проблемы обучения концептам <i>пространство версий </i>есть не что иное, как 
  способ представления всех описаний концептов, совместимых в оговоренном выше 
  смысле со всеми экземплярами в обучающей выборке. Главное достоинство использованной 
  Митчеллом (Mitchell) методики представления и обновления пространств версий 
  состоит в том, что версии могут строиться последовательно одна за другой, не 
  оглядываясь на ранее обработанные экземпляры или ранее отвергнутые гипотезы 
  описаний концептов.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Митчелл отыскал 
  ключ к решению проблемы эффективного представления и обновления пространств 
  версий, заметив, что пространство поиска допустимых описаний концептов является 
  избыточным. В частности, он пришел к выводу, что можно выполнить частичное упорядочение 
  образцов, сформированных описаниями концептов. Самым важным является отношение 
  &quot;более специфичный чем или равный&quot;, которое формулируется следующим 
  образом.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">&quot;Образец 
  Р1 более специфичен или равен образцу Р2 (это записывается в форме Р2 =&lt; 
  Р2) тогда и только тогда, когда Р1 сопоставим с подмножеством всех образцов, 
  с которыми сопоставим образец Р2&quot;.<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Рассмотрим 
  следующий простой пример из обучающей программы для &quot;мира блоков&quot; 
  <i>[Winston, 1975, а]. </i>На рис. 20.1 образец Р1 более специфичен, чем образец 
  Р2, поскольку ограничения, специфицированные в образце Р1, удовлетворяются только 
  в том случае, если удовлетворяются более слабые ограничения, специфицированные 
  в образце Р2. Можно посмотреть на эту пару образцов и с другой точки зрения: 
  если в некотором экземпляре удовлетворяются ограничения, специфицированные в 
  образце Р1, то обязательно удовлетворяются и условия, специфицированные в образце 
  Р2, но не наоборот.<br>
  </font></p>
<p align="center"><font face="Arial, Helvetica, sans-serif"><img src="1.gif" width="500" height="165"> 
  </font></p>
<p align="center"><font face="Arial, Helvetica, sans-serif" size="3">Рис. 20.1. 
  Отношения между образцами<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Обратите внимание 
  на следующий нюанс. Для того чтобы программа смогла выполнить упорядочение представленных 
  образцов, она должна быть способна разобраться в смысле множества понятий и 
  отношений между ними, которые специфичны для данной предметной области.<br>
  </font></p>
<ul>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> Программа должна понимать, 
    что если В — это &quot;брусок&quot;, то, значит, В — это одновременно и &quot;объект 
    произвольной формы&quot;, т.е. в программу должны быть заложены определенные 
    критерии, которые помогут ей выделить категории сущностей, представленных 
    узлами в языке описания структуры образцов.<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> Программа должна знать, 
    что если А &quot;поддерживает&quot; В, то, следовательно, А &quot;касается&quot; 
    В в мире блоков, т.е. программа должна обладать способностью разобраться в 
    избыточности отношений между объектами в предметной области.<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> Программа должна понимать 
    логический смысл таких терминов, как &quot;не&quot;, &quot;любой&quot; и &quot;или&quot;, 
    и то как они влияют на ограничения или разрешения в процессе сопоставления 
    образцов.<br>
    </font></li>
</ul>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Все эти знания 
  необходимы программе для того, чтобы она смогла сопоставить образец Р1 с Р2, 
  т.е. узлы и связи в одном образце с узлами и связями в другом, и выяснить, что 
  любое ограничение, специфицированное в Р1, является более жестким, более специфичным, 
  чем соответствующее ему ограничение в образце Р2. Если программа сможет во всем 
  этом<br>
  </font></p>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">разобраться, 
  то открывается путь к представлению пространств версий в терминах большей &quot;специфичности&quot; 
  или большей &quot;общности&quot; образцов в этом пространстве. Тогда программа 
  может рассматривать некоторое пространство версий как содержащее:<br>
  </font></p>
<ul>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> множество максимально 
    специфических образцов;<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> множество максимально 
    обобщенных образцов;<br>
    </font></li>
  <li> <font face="Arial, Helvetica, sans-serif" size="3"> все описания концептов, 
    которые находятся между этими двумя крайними множествами.<br>
    </font></li>
</ul>
<p align="left"> <font face="Arial, Helvetica, sans-serif" size="3">Все это в 
  совокупности называется представлением пространств версий <i>граничными множествами 
  (boundary sets). </i>Такое представление, во-первых, компактно, а во-вторых, 
  легко обновляется. Оно компактно, поскольку не хранит в явном виде все описания 
  концептов в данном пространстве. Его легко обновлять, так как определение нового 
  пространства можно выполнить перемещением одной или обеих границ.</font></p>
<p>&nbsp;</p><table BORDER=0   COLS=3 WIDTH="16%" >
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"><a href="Index4.htm"><img SRC="Back.gif"  BORDER=0 ></a></font></td>
    <td WIDTH="10%"><font face="Arial, Helvetica, sans-serif"><a href="../index.html"><img SRC="Menu.gif" BORDER=0 ></a></font></td>
    <td ALIGN=RIGHT><font face="Arial, Helvetica, sans-serif"><a href="Index6.htm"><img SRC="For.gif" BORDER=0 ></a></font></td>
  </tr>
</table>
</body>
</html>